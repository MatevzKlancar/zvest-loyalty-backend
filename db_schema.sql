-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.admin_users (
  supabase_user_id uuid NOT NULL UNIQUE,
  email character varying NOT NULL UNIQUE,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  role character varying NOT NULL CHECK (role::text = ANY (ARRAY['platform_admin'::character varying, 'super_admin'::character varying]::text[])),
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT admin_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.app_users (
  phone_number character varying UNIQUE,
  email character varying UNIQUE,
  first_name character varying,
  last_name character varying,
  date_of_birth date,
  verification_code character varying,
  verification_expires_at timestamp with time zone,
  push_token character varying,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  is_verified boolean DEFAULT false,
  preferences jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT app_users_pkey PRIMARY KEY (id)
);
CREATE TABLE public.article_pricing (
  article_id uuid NOT NULL,
  price numeric NOT NULL CHECK (price >= 0::numeric),
  start_time time without time zone,
  end_time time without time zone,
  start_date date,
  end_date date,
  days_of_week ARRAY,
  name character varying,
  description text,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  priority integer DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT article_pricing_pkey PRIMARY KEY (id),
  CONSTRAINT article_pricing_article_id_fkey FOREIGN KEY (article_id) REFERENCES public.articles(id)
);
CREATE TABLE public.articles (
  shop_id uuid NOT NULL,
  pos_article_id character varying NOT NULL,
  name character varying NOT NULL,
  description text,
  category character varying,
  type character varying,
  tax_type character varying,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tax_rate numeric DEFAULT 0,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  base_price numeric NOT NULL CHECK (base_price >= 0::numeric),
  CONSTRAINT articles_pkey PRIMARY KEY (id),
  CONSTRAINT articles_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.coupon_redemptions (
  coupon_id uuid NOT NULL,
  app_user_id uuid NOT NULL,
  transaction_id uuid,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  points_deducted integer DEFAULT 0,
  discount_applied numeric DEFAULT 0,
  redeemed_at timestamp with time zone DEFAULT now(),
  status character varying DEFAULT 'active'::character varying CHECK (status::text = ANY (ARRAY['active'::character varying, 'used'::character varying, 'expired'::character varying, 'cancelled'::character varying]::text[])),
  redemption_code character varying UNIQUE,
  CONSTRAINT coupon_redemptions_pkey PRIMARY KEY (id),
  CONSTRAINT coupon_redemptions_app_user_id_fkey FOREIGN KEY (app_user_id) REFERENCES public.app_users(id),
  CONSTRAINT coupon_redemptions_coupon_id_fkey FOREIGN KEY (coupon_id) REFERENCES public.coupons(id),
  CONSTRAINT coupon_redemptions_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transactions(id)
);
CREATE TABLE public.coupons (
  points_required integer CHECK (points_required >= 0),
  name character varying NOT NULL,
  image_url character varying,
  articles_data jsonb NOT NULL CHECK (jsonb_typeof(articles_data) = 'array'::text),
  shop_id uuid NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['percentage'::character varying, 'fixed'::character varying]::text[])),
  description text,
  expires_at timestamp with time zone,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  used_count integer DEFAULT 0 CHECK (used_count >= 0),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT coupons_pkey PRIMARY KEY (id),
  CONSTRAINT coupons_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.customer_loyalty_accounts (
  app_user_id uuid NOT NULL,
  shop_id uuid NOT NULL,
  last_visit_at timestamp with time zone,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  points_balance integer DEFAULT 0 CHECK (points_balance >= 0),
  total_spent numeric DEFAULT 0 CHECK (total_spent >= 0::numeric),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  total_points_earned integer DEFAULT 0 CHECK (total_points_earned >= 0),
  total_points_redeemed integer DEFAULT 0 CHECK (total_points_redeemed >= 0),
  CONSTRAINT customer_loyalty_accounts_pkey PRIMARY KEY (id),
  CONSTRAINT customer_loyalty_accounts_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id),
  CONSTRAINT customer_loyalty_accounts_app_user_id_fkey FOREIGN KEY (app_user_id) REFERENCES public.app_users(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  settings jsonb DEFAULT '{}'::jsonb,
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  name character varying NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['platform'::character varying, 'enterprise'::character varying]::text[])),
  subscription_tier character varying CHECK (subscription_tier::text = ANY (ARRAY['basic'::character varying, 'premium'::character varying, 'enterprise'::character varying]::text[])),
  database_config jsonb,
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT customers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.loyalty_programs (
  shop_id uuid NOT NULL,
  type character varying NOT NULL CHECK (type::text = ANY (ARRAY['points'::character varying, 'stamps'::character varying, 'visits'::character varying]::text[])),
  name character varying NOT NULL,
  description text,
  points_per_euro numeric CHECK (points_per_euro >= 0::numeric),
  stamps_required integer CHECK (stamps_required > 0),
  visits_required integer CHECK (visits_required > 0),
  reward_description text,
  reward_value numeric,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT loyalty_programs_pkey PRIMARY KEY (id),
  CONSTRAINT loyalty_programs_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.pos_providers (
  name character varying NOT NULL,
  description text,
  api_key character varying NOT NULL UNIQUE,
  webhook_url character varying,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT pos_providers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.push_tokens (
  token text NOT NULL UNIQUE,
  user_id text,
  device_type text CHECK (device_type = ANY (ARRAY['ios'::text, 'android'::text])),
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  is_active boolean DEFAULT true,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT push_tokens_pkey PRIMARY KEY (id)
);
CREATE TABLE public.shop_owner_invitations (
  shop_id uuid NOT NULL,
  email character varying NOT NULL,
  first_name character varying NOT NULL,
  last_name character varying NOT NULL,
  phone character varying,
  invitation_token character varying NOT NULL UNIQUE,
  expires_at timestamp with time zone NOT NULL,
  invited_by character varying,
  completed_at timestamp with time zone,
  user_id uuid,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'expired'::character varying, 'cancelled'::character varying]::text[])),
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  invited_by_admin uuid,
  CONSTRAINT shop_owner_invitations_pkey PRIMARY KEY (id),
  CONSTRAINT shop_owner_invitations_invited_by_admin_fkey FOREIGN KEY (invited_by_admin) REFERENCES public.admin_users(id),
  CONSTRAINT shop_owner_invitations_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);
CREATE TABLE public.shops (
  image_url character varying,
  opening_hours character varying,
  loyalty_type character varying DEFAULT 'points'::character varying CHECK (loyalty_type::text = ANY (ARRAY['points'::character varying, 'coupons'::character varying]::text[])),
  website character varying,
  social_media jsonb DEFAULT '{}'::jsonb,
  tag character varying,
  points_per_euro integer DEFAULT 100 CHECK (points_per_euro >= 1),
  owner_user_id uuid,
  customer_id uuid NOT NULL,
  pos_provider_id uuid NOT NULL,
  pos_shop_id character varying,
  name character varying NOT NULL,
  description text,
  address text,
  phone character varying,
  email character varying,
  type character varying,
  approved_by character varying,
  approved_at timestamp with time zone,
  pos_synced_at timestamp with time zone,
  pos_sync_data jsonb,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'pending_setup'::character varying, 'active'::character varying, 'suspended'::character varying, 'inactive'::character varying]::text[])),
  settings jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT shops_pkey PRIMARY KEY (id),
  CONSTRAINT shops_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT shops_pos_provider_id_fkey FOREIGN KEY (pos_provider_id) REFERENCES public.pos_providers(id)
);
CREATE TABLE public.transaction_logs (
  transaction_id uuid NOT NULL,
  action character varying NOT NULL,
  performed_by character varying,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  details jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  CONSTRAINT transaction_logs_pkey PRIMARY KEY (id),
  CONSTRAINT transaction_logs_transaction_id_fkey FOREIGN KEY (transaction_id) REFERENCES public.transactions(id)
);
CREATE TABLE public.transactions (
  shop_id uuid NOT NULL,
  pos_invoice_id character varying NOT NULL,
  total_amount numeric NOT NULL CHECK (total_amount >= 0::numeric),
  items jsonb NOT NULL,
  app_user_id uuid,
  loyalty_account_id uuid,
  coupon_used_id uuid,
  qr_code_data text,
  qr_scanned_at timestamp with time zone,
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  transaction_number bigint NOT NULL DEFAULT nextval('transactions_transaction_number_seq'::regclass),
  tax_amount numeric DEFAULT 0 CHECK (tax_amount >= 0::numeric),
  loyalty_points_awarded integer DEFAULT 0 CHECK (loyalty_points_awarded >= 0),
  loyalty_stamps_awarded integer DEFAULT 0 CHECK (loyalty_stamps_awarded >= 0),
  discount_amount numeric DEFAULT 0 CHECK (discount_amount >= 0::numeric),
  status character varying DEFAULT 'pending'::character varying CHECK (status::text = ANY (ARRAY['pending'::character varying, 'completed'::character varying, 'cancelled'::character varying, 'refunded'::character varying]::text[])),
  metadata jsonb DEFAULT '{}'::jsonb,
  created_at timestamp with time zone DEFAULT now(),
  updated_at timestamp with time zone DEFAULT now(),
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_loyalty_account_id_fkey FOREIGN KEY (loyalty_account_id) REFERENCES public.customer_loyalty_accounts(id),
  CONSTRAINT transactions_coupon_used_id_fkey FOREIGN KEY (coupon_used_id) REFERENCES public.coupons(id),
  CONSTRAINT transactions_app_user_id_fkey FOREIGN KEY (app_user_id) REFERENCES public.app_users(id),
  CONSTRAINT transactions_shop_id_fkey FOREIGN KEY (shop_id) REFERENCES public.shops(id)
);